name: Docker Image CI

on:
  push:
    branches: ["DevBranch"]
  pull_request:
    branches: ["DevBranch"]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      - name: Set image version (tag)
        id: image_version
        run: echo "gitsha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ibrahimzeer
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ghcr.io/ibrahimzeer/ecommerce:${{ steps.image_version.outputs.gitsha }}
      - name: Publish docker image
        run: docker push ghcr.io/ibrahimzeer/ecommerce:${{ steps.image_version.outputs.gitsha }}
      - name: configure docker host
        uses: khaledez/configure-docker-host@v2
        with:
          host: 54.226.85.215
          user: github
          ssh-private-key: ${{ secrets.DEPLOYMENT_KEY }}
      - name: deploy
        run: docker compose -f docker-compose.yml up -d
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_NAME: ${{ secrets.S3_NAME }}
          SECRET_KEY: ${{secrets.SECRET_KEY}}
          DB_HOST: ${{secrets.DB_HOST}}
          DB_PORT: ${{secrets.DB_PORT}}
          DB_USER_NAME: ${{secrets.DB_USER_NAME}}
          DB_PASSWORD: ${{secrets.DB_PASSWORD}}
          MYSQL_ROOT_PASSWORD: ${{secrets.MYSQL_ROOT_PASSWORD}}
          DB_NAME: ${{secrets.DB_NAME}}
          GIT_VERSION: ${{ steps.image_version.outputs.gitsha }}
      - name: print logs
        if: always() # This step will be executed even if previous steps fails
        run: docker-compose -f docker-compose-prod.yml logs
